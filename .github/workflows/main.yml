name: Release Application

on:
  push:
    branches:
      - master

jobs:
  crate_metadata:
    name: Extract crate metadata
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: create_tag
        shell: bash
        run: python3 -m pdb .github/create_tag.py

    outputs:
      name: ${{ env.APP_NAME }}
      version: ${{ env.APP_VERSION }}
      maintainer: ${{ env.MAINTAINER }}
      homepage: ${{ env.HOMEPAGE }}
      rust_version: ${{ env.RUST_VERSION }}
      publish_info: ${{ env.PUBLISH_INFO }}
      new_tag: ${{ env.NEW_TAG }}
      new_version: ${{ env.NEW_VERSION }}

  build:
    name: Build ${{ matrix.target }} (${{ matrix.os }})
    needs: crate_metadata
    runs-on: ${{ matrix.os }}
    permissions:
      #      pull-requests: write   # 'write' access to pull requests
      contents: write # We generate static HTML, JS, CSS so we need write access to the repo
      discussions: write
    #      pages: write
    #      id-token: write
    #      deployments: write
    #      statuses: write
    #      actions: write
    #      checks: read
    strategy:
      matrix:
        include:
          #          - build: linux
          #            os: ubuntu-latest
          #            target: x86_64-unknown-linux-musl
          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: get env
        run: |
          echo "new_tag: ${{ needs.crate_metadata.outputs.new_tag }}" >> $GITHUB_STEP_SUMMARY
          echo "NEW_TAG=${{ needs.crate_metadata.outputs.new_tag }}" >> $GITHUB_ENV
          echo "APP_NAME=${{ needs.crate_metadata.outputs.name }}" >> $GITHUB_ENV
          echo "APP_VERSION=${{ needs.crate_metadata.outputs.version }}" >> $GITHUB_ENV
          echo "MATRIX_TARGET=${{ matrix.target }}" >> $GITHUB_ENV
          echo "MATRIX_OS=${{ matrix.os }}" >> $GITHUB_ENV

          echo "APP_NAME: ${{ needs.crate_metadata.outputs.name }}" >> $GITHUB_STEP_SUMMARY
          echo "APP_VERSION: ${{ needs.crate_metadata.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "maintainer: ${{ needs.crate_metadata.outputs.maintainer }}" >> $GITHUB_STEP_SUMMARY
          echo "homepage: ${{ needs.crate_metadata.outputs.homepage }}" >> $GITHUB_STEP_SUMMARY
          echo "rust_version: ${{ needs.crate_metadata.outputs.rust_version }}" >> $GITHUB_STEP_SUMMARY
          echo "MATRIX_TARGET: ${{ matrix.target }}" >> $GITHUB_STEP_SUMMARY
          echo "MATRIX_OS: ${{ matrix.os }}" >> $GITHUB_STEP_SUMMARY
          
          git_branch=$(git rev-parse --abbrev-ref HEAD)
          git_sha_short=$(git rev-parse --short HEAD)
          git_branch_sha="${git_branch}-${git_sha_short}"
          echo "GIT_BRANCH=${git_branch}" >> $GITHUB_ENV
          echo "GIT_SHA_SHORT=${git_sha_short}" >> $GITHUB_ENV
          echo "GIT_BRANCH_SHA=${git_branch_sha}" >> $GITHUB_ENV

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      #      - name: Build
      #        uses: actions-rs/cargo@v1
      #        with:
      #          use-cross: true
      #          command: build
      #          args: --verbose --release --target ${{ matrix.target }}
      - name: Build archive
        shell: bash
        run: |
          sh .github/build_archive.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: my-artifact
          path: |
            ${{ env.asset_target }}
            ${{ env.asset_binary }}

          #      - name: Upload Release - Target
          #        uses: svenstaro/upload-release-action@v1-release
          #        with:
          #          repo_token: ${{ secrets.GITHUB_TOKEN }}
          #          file: ${{ env.asset_target }}
          #          asset_name: ${{ env.asset_target }}
          #          tag: ${{ env.GIT_BRANCH_SHA }}
          #          body: "- Upload Release - Target"
          #
          #      - name: Upload Release - Binary
          #        uses: svenstaro/upload-release-action@v1-release
          #        with:
          #          repo_token: ${{ secrets.GITHUB_TOKEN }}
          #          file: ${{ env.asset_binary }}
          #          asset_name: ${{ env.asset_binary }}
          #          tag: ${{ env.GIT_BRANCH_SHA }}
          #          body: "- Upload Release - Binary"

      - name: Upload Release - Binary
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.NEW_TAG }}
          body: ${{ needs.crate_metadata.outputs.publish_info }}
          files: |
            ${{ env.asset_binary }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

